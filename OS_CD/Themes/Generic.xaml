<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:OS_CD">

    <!--Font-->
    <FontFamily x:Key="Segoe">/FontLibrary;Component/#Segoe</FontFamily>
    <FontFamily x:Key="Digital">/FontLibrary;Component/#Digital</FontFamily>


    <!--YT_TitleBar-->
    <Style TargetType="{x:Type local:YT_TitleBar}">
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:YT_TitleBar}">
                    <ContentPresenter x:Name="ContentPresenter"
                                      ContentSource="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--YT_SizeBorder-->
    <Style TargetType="{x:Type local:YT_SizeBorder}">
        <Setter Property="BorderThickness" Value="{DynamicResource MainWindow_SizeBorder_Thickness}"/>
        <Setter Property="BorderBrush" Value="#00000000"/>
    </Style>
    
    <!--YT_Window-->
    <Style TargetType="{x:Type local:YT_Window}">
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="AllowsTransparency"
                Value="True" />
        <Setter Property="Width"
                Value="540" />
        <Setter Property="Height"
                Value="320" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:YT_Window}">
                    <Border BorderBrush="{DynamicResource MainWindow_Border_Normal}"
                            BorderThickness="1"
                            Margin="2">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <AdornerDecorator x:Name="Content"
                                              Grid.Row="1">
                                <ContentPresenter />
                            </AdornerDecorator>
                            <local:YT_TitleBar x:Name="TitleBar"
                                               Background="{DynamicResource TitleBar_BG}"
                                               Content="{TemplateBinding TitleArea}" />
                            <local:YT_SizeBorder Grid.Row="0" Grid.RowSpan="2" 
                                                 AttachedWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:YT_Window}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExtendToTitleBar"
                                 Value="true">
                            <Setter TargetName="Content"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="Content"
                                    Property="Grid.RowSpan"
                                    Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--IconButtons-->

    <!--IconButton-->
    <Style TargetType="{x:Type local:YT_IconButton}">
        <Setter Property="FontWeight"
                Value="Light" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="ToolTipVisiblity"
                Value="Collapsed" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Style="{DynamicResource YT_IconButtonToolTip}"
                         Visibility="{Binding ToolTipVisiblity}">
                    <Grid Background="{DynamicResource DefaultToolTip_BG}">
                        <TextBlock Text="{Binding ForeToolTip}"
                                   Style="{DynamicResource YT_IconButtonToolTipText}" />
                    </Grid>
                </ToolTip>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:YT_IconButton}">
                    <Border x:Name="RootBorder"
                            SnapsToDevicePixels="True">
                        <Grid x:Name="RootGrid"
                              Margin="{TemplateBinding Padding}"
                              Background="{TemplateBinding IconMaskN}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="ContentIcon"
                                       Text="{TemplateBinding Content}"
                                       FontFamily="{DynamicResource Segoe}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"        
                                       Visibility="{TemplateBinding IconVisiblity}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       RenderTransformOrigin=".5 .5">
                                <TextBlock.RenderTransform>
                                    <RotateTransform x:Name="ContentIconRotateTransform" />
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <TextBlock x:Name="ContentTexts"
                                       Grid.Column="1"
                                       Margin="8,0,0,0"
                                       Text="{TemplateBinding ContentText}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontSize="{TemplateBinding ContentTextFontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       Visibility="{TemplateBinding ContentTextVisiblity}"
                                       TextAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="True">
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="AllowAni"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ContentIcon"
                                        Property="Foreground"
                                        Value="{Binding IconR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="ContentTexts"
                                        Property="Foreground"
                                        Value="{Binding IconR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="RootBorder"
                                        Property="Background"
                                        Value="{Binding IconMaskR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Storyboard.TargetName="ContentIconRotateTransform"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="-90"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentIconRotateTransform"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="0"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="AllowAni"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ContentIcon"
                                        Property="Foreground"
                                        Value="{Binding IconR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="ContentTexts"
                                        Property="Foreground"
                                        Value="{Binding IconR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="RootBorder"
                                        Property="Background"
                                        Value="{Binding IconMaskR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ContentIcon"
                                    Property="Foreground"
                                    Value="{Binding IconP,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="ContentTexts"
                                    Property="Foreground"
                                    Value="{Binding IconP,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="RootBorder"
                                    Property="Background"
                                    Value="{Binding IconMaskP,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IconVisiblity"
                                 Value="Collapsed">
                            <Setter TargetName="ContentTexts" Property="Margin" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--IconToggelButton-->
    <Style TargetType="{x:Type local:YT_IconToggelButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Style="{DynamicResource YT_IconButtonToolTip}"
                                 Visibility="{Binding ToolTipVisiblity}">
                            <Grid Background="{DynamicResource DefaultToolTip_BG}">
                                <TextBlock Text="{Binding BackToolTip}"
                                           Style="{DynamicResource YT_IconButtonToolTipText}" />
                            </Grid>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="False">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Style="{DynamicResource YT_IconButtonToolTip}"
                                 Visibility="{Binding ToolTipVisiblity}">
                            <Grid Background="{DynamicResource DefaultToolTip_BG}">
                                <TextBlock Text="{Binding ForeToolTip}"
                                           Style="{DynamicResource YT_IconButtonToolTipText}" />
                            </Grid>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:YT_IconToggelButton}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="RootGrid"
                              Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="DarkMask"
                                       Fill="{TemplateBinding IconMaskN}"
                                       Visibility="Collapsed"
                                       Grid.ColumnSpan="2" />
                            <TextBlock x:Name="ContentIcon"
                                       Grid.Column="1"
                                       Margin="{TemplateBinding Padding}"
                                       Style="{DynamicResource IconTextBlock}"
                                       Text="{TemplateBinding ForeIcon}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       RenderTransformOrigin=".5 .5"
                                       RenderTransform="{TemplateBinding IconRotate}" />
                            <TextBlock x:Name="Label"
                                       Margin="0,0,5,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="{TemplateBinding Content}"
                                       FontSize="{TemplateBinding LabelFontSize}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       Visibility="{TemplateBinding LabelVisibility}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ContentIcon"
                                    Property="Text"
                                    Value="{Binding BackIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Label"
                                    Property="Text"
                                    Value="{Binding BackText, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="DarkMask"
                                    Property="Fill"
                                    Value="{Binding IconMaskR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="ContentIcon"
                                    Property="Foreground"
                                    Value="{Binding IconR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="DarkMask"
                                    Property="Fill"
                                    Value="{Binding IconMaskP, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="ContentIcon"
                                    Property="Foreground"
                                    Value="{Binding IconP, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--IconRadioButton-->
    <Style TargetType="{x:Type local:YT_IconRadioButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Style="{DynamicResource YT_IconButtonToolTip}"
                                 Visibility="{Binding ToolTipVisiblity}">
                            <Grid Background="{DynamicResource DefaultToolTip_BG}">
                                <TextBlock Text="{Binding BackToolTip}"
                                           Style="{DynamicResource YT_IconButtonToolTipText}" />
                            </Grid>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="False">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Style="{DynamicResource YT_IconButtonToolTip}"
                                 Visibility="{Binding ToolTipVisiblity}">
                            <Grid Background="{DynamicResource DefaultToolTip_BG}">
                                <TextBlock Text="{Binding ForeToolTip}"
                                           Style="{DynamicResource YT_IconButtonToolTipText}" />
                            </Grid>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:YT_IconRadioButton}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="RootGrid"
                              Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="DarkMask"
                                       Fill="{TemplateBinding IconMaskN}"
                                       Visibility="Collapsed"
                                       Grid.ColumnSpan="2" />
                            <TextBlock x:Name="ContentIcon"
                                       Grid.Column="1"
                                       Margin="{TemplateBinding Padding}"
                                       Style="{DynamicResource IconTextBlock}"
                                       Text="{TemplateBinding ForeIcon}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontWeight="{TemplateBinding FontWeight}" />
                            <TextBlock x:Name="Label"
                                       Margin="0,0,4,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="{TemplateBinding Content}"
                                       FontSize="{TemplateBinding LabelFontSize}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       Visibility="{TemplateBinding LabelVisibility}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ContentIcon"
                                    Property="Text"
                                    Value="{Binding BackIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="DarkMask"
                                    Property="Fill"
                                    Value="{Binding IconMaskR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="ContentIcon"
                                    Property="Foreground"
                                    Value="{Binding IconR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="DarkMask"
                                    Property="Fill"
                                    Value="{Binding IconMaskP, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="ContentIcon"
                                    Property="Foreground"
                                    Value="{Binding IconP, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="ContentIcon"
                                    Property="Text"
                                    Value="{Binding DisIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="false" />
                                <Condition Property="IsChecked"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ContentIcon"
                                        Property="Text"
                                        Value="{Binding DisIconBack, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>